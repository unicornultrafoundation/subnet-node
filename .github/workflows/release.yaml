name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
      
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o dist/myapp-${VERSION}-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o dist/myapp-${VERSION}-linux-arm64
  release:
    needs: [build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GH_PAT }}
          release_id: ${{ steps.create-release.outputs.id }}
          asset_path: ./dist/
          asset_name: ${{ basename }}
          asset_content_type: application/octet-stream
